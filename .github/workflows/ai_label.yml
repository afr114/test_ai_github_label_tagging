name: Label AI Assistance

on:
  pull_request:
    types: [opened, edited, reopened, synchronize]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  label-ai-pr:
    if: github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest

    steps:
      - name: Update AI Assistance label
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const body = pr.body || "";
            const number = pr.number;

            // Match checked boxes like [x], [ X ], etc.
            const checked = (label) => {
              const pattern = new RegExp(`- \\[\\s*[xX]\\s*\\] \\*\\*${label}\\*\\*`);
              return pattern.test(body);
            };

            const hasLight = checked("Light");
            const hasMedium = checked("Medium");
            const hasHeavy = checked("Heavy");

            // Determine the correct label (only one should apply)
            let newLabel = null;
            if (hasHeavy) newLabel = "ai-assisted/heavy";
            else if (hasMedium) newLabel = "ai-assisted/medium";
            else if (hasLight) newLabel = "ai-assisted/light";

            const existingLabels = pr.labels.map(label => label.name);

            // Remove any outdated ai-assisted/* label
            const toRemove = existingLabels.filter(label =>
              label.startsWith("ai-assisted/") && label !== newLabel
            );

            for (const label of toRemove) {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: number,
                name: label
              });
            }

            // Add new label if needed
            if (newLabel && !existingLabels.includes(newLabel)) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: number,
                labels: [newLabel]
              });
            }


